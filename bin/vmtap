#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'
require_relative '../lib/collect'


program :version, '0.0.1'
program :description, 'Manage droplets with ease'

command :create do |c|
  c.syntax = 'vmtap create [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '-n', '--name NAME', String, 'Specify name of new VM'
  c.option '-f', '--file FILE', String, 'Specify VM spec file'
  c.action do |args, options|
    puts options.name
  end
end

command :delete do |c|
  c.syntax = 'vmtap delete [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '-n', '--name NAME', String, 'Specify name of VM to delete'
  c.option '-f', '--force', Boolean, 'Force delete'
  c.option '-a', '--all', Boolean, 'Delete ALL VMs; use with caution!'
  c.action do |args, options|
    # Do something or c.when_called Vmtap::Commands::Delete
  end
end

command :inventory do |c|
  c.syntax = 'vmtap inventory [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.action do |args, options|
    execute = Vmtap::Collect.new
    execute.inventory
  end
end

